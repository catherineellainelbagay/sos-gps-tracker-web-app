{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Corazon L. Bagay\\\\Downloads\\\\sos\\\\sos-gps-tracker-web-app\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix marker icon issue\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\n\n// Responder fixed coordinates (e.g., PUP Bi√±an Campus)\nconst responderLat = 14.3110;\nconst responderLng = 121.0794;\n\n// Haversine formula\nfunction calculateDistance(lat1, lon1, lat2, lon2) {\n  const toRad = value => value * Math.PI / 180;\n  const R = 6371; // Radius of Earth in km\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c; // Distance in kilometers\n}\nfunction Dashboard() {\n  _s();\n  const [location, setLocation] = useState(null);\n  const [distance, setDistance] = useState(null);\n  useEffect(() => {\n    const fetchLocation = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/location/latest');\n        console.log(\"Fetched:\", res.data);\n        if (res.data && typeof res.data.latitude === 'number' && typeof res.data.longitude === 'number') {\n          setLocation(res.data);\n\n          // Compute distance\n          const dist = calculateDistance(responderLat, responderLng, res.data.latitude, res.data.longitude);\n          setDistance(dist);\n        } else {\n          console.warn(\"Invalid data from backend:\", res.data);\n        }\n      } catch (error) {\n        console.error('Error fetching location:', error);\n      }\n    };\n    fetchLocation();\n    const interval = setInterval(fetchLocation, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Live GPS Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), location ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCCD Latitude: \", location.latitude, \", Longitude: \", location.longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), distance !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCCF Distance from Responder: \", distance.toFixed(2), \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [location.latitude, location.longitude],\n        zoom: 18,\n        style: {\n          height: '400px',\n          width: '100%',\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [location.latitude, location.longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Current Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [responderLat, responderLng],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Responder Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u23F3 Waiting for valid GPS data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"KE4DFU0ldXfRZjqiuXhyKlGO5Oo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","responderLat","responderLng","calculateDistance","lat1","lon1","lat2","lon2","toRad","value","Math","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","Dashboard","_s","location","setLocation","distance","setDistance","fetchLocation","res","get","console","log","data","latitude","longitude","dist","warn","error","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","center","zoom","style","height","width","marginTop","url","attribution","position","_c","$RefreshReg$"],"sources":["C:/Users/Corazon L. Bagay/Downloads/sos/sos-gps-tracker-web-app/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix marker icon issue\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\n// Responder fixed coordinates (e.g., PUP Bi√±an Campus)\nconst responderLat = 14.3110;\nconst responderLng = 121.0794;\n\n// Haversine formula\nfunction calculateDistance(lat1, lon1, lat2, lon2) {\n  const toRad = (value) => (value * Math.PI) / 180;\n  const R = 6371; // Radius of Earth in km\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a =\n    Math.sin(dLat / 2) ** 2 +\n    Math.cos(toRad(lat1)) *\n      Math.cos(toRad(lat2)) *\n      Math.sin(dLon / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c; // Distance in kilometers\n}\n\nfunction Dashboard() {\n  const [location, setLocation] = useState(null);\n  const [distance, setDistance] = useState(null);\n\n  useEffect(() => {\n    const fetchLocation = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/location/latest');\n        console.log(\"Fetched:\", res.data);\n        if (\n          res.data &&\n          typeof res.data.latitude === 'number' &&\n          typeof res.data.longitude === 'number'\n        ) {\n          setLocation(res.data);\n\n          // Compute distance\n          const dist = calculateDistance(\n            responderLat,\n            responderLng,\n            res.data.latitude,\n            res.data.longitude\n          );\n          setDistance(dist);\n        } else {\n          console.warn(\"Invalid data from backend:\", res.data);\n        }\n      } catch (error) {\n        console.error('Error fetching location:', error);\n      }\n    };\n\n    fetchLocation();\n    const interval = setInterval(fetchLocation, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"bg-white p-4 rounded shadow\">\n      <h2 className=\"text-xl font-semibold mb-4\">Live GPS Tracker</h2>\n      {location ? (\n        <>\n          <p>üìç Latitude: {location.latitude}, Longitude: {location.longitude}</p>\n          {distance !== null && (\n            <p>üìè Distance from Responder: {distance.toFixed(2)} km</p>\n          )}\n          <MapContainer\n            center={[location.latitude, location.longitude]}\n            zoom={18}\n            style={{ height: '400px', width: '100%', marginTop: '1rem' }}\n          >\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution=\"&copy; OpenStreetMap contributors\"\n            />\n            <Marker position={[location.latitude, location.longitude]}>\n              <Popup>Current Position</Popup>\n            </Marker>\n            <Marker position={[responderLat, responderLng]}>\n              <Popup>Responder Location</Popup>\n            </Marker>\n          </MapContainer>\n        </>\n      ) : (\n        <p>‚è≥ Waiting for valid GPS data...</p>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}