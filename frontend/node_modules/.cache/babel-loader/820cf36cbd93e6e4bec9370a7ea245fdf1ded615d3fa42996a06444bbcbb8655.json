{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Corazon L. Bagay\\\\Downloads\\\\sos\\\\sos-gps-tracker-web-app\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix marker icon issue\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\n\n// Static Responder Coordinates (Sample: Bi√±an area)\nconst responder = {\n  latitude: 14.3137,\n  longitude: 121.0809\n};\n\n// Haversine Formula to compute distance in KM\nfunction haversineDistance([lat1, lon1], [lat2, lon2]) {\n  const R = 6371; // Earth radius in km\n  const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\nfunction Dashboard() {\n  _s();\n  const [location, setLocation] = useState(null);\n  const [distance, setDistance] = useState(null);\n  useEffect(() => {\n    const fetchLocation = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/location/latest');\n        if (res.data && typeof res.data.latitude === 'number' && typeof res.data.longitude === 'number') {\n          setLocation(res.data);\n          const dist = haversineDistance([responder.latitude, responder.longitude], [res.data.latitude, res.data.longitude]);\n          setDistance(dist.toFixed(2));\n        } else {\n          console.warn(\"Invalid data from backend:\", res.data);\n        }\n      } catch (error) {\n        console.error('Error fetching location:', error);\n      }\n    };\n    fetchLocation();\n    const interval = setInterval(fetchLocation, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const linePositions = location && responder ? [[responder.latitude, responder.longitude], [location.latitude, location.longitude]] : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Live GPS Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), location ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCCD User Location: \", location.latitude, \", \", location.longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDE93 Responder Location: \", responder.latitude, \", \", responder.longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCCF Distance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [distance, \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [location.latitude, location.longitude],\n        zoom: 16,\n        style: {\n          height: '400px',\n          width: '00%',\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [responder.latitude, responder.longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Responder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [location.latitude, location.longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: linePositions,\n          pathOptions: {\n            color: 'red',\n            dashArray: '10'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u23F3 Waiting for valid GPS data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"KE4DFU0ldXfRZjqiuXhyKlGO5Oo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","MapContainer","TileLayer","Marker","Popup","Polyline","L","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","responder","latitude","longitude","haversineDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","Dashboard","_s","location","setLocation","distance","setDistance","fetchLocation","res","get","data","dist","toFixed","console","warn","error","interval","setInterval","clearInterval","linePositions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","marginTop","url","attribution","position","positions","pathOptions","color","dashArray","_c","$RefreshReg$"],"sources":["C:/Users/Corazon L. Bagay/Downloads/sos/sos-gps-tracker-web-app/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix marker icon issue\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\n// Static Responder Coordinates (Sample: Bi√±an area)\nconst responder = {\n  latitude: 14.3137,\n  longitude: 121.0809\n};\n\n// Haversine Formula to compute distance in KM\nfunction haversineDistance([lat1, lon1], [lat2, lon2]) {\n  const R = 6371; // Earth radius in km\n  const dLat = ((lat2 - lat1) * Math.PI) / 180;\n  const dLon = ((lon2 - lon1) * Math.PI) / 180;\n  const a =\n    Math.sin(dLat / 2) ** 2 +\n    Math.cos((lat1 * Math.PI) / 180) *\n      Math.cos((lat2 * Math.PI) / 180) *\n      Math.sin(dLon / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\n\nfunction Dashboard() {\n  const [location, setLocation] = useState(null);\n  const [distance, setDistance] = useState(null);\n\n  useEffect(() => {\n    const fetchLocation = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/location/latest');\n        if (\n          res.data &&\n          typeof res.data.latitude === 'number' &&\n          typeof res.data.longitude === 'number'\n        ) {\n          setLocation(res.data);\n          const dist = haversineDistance(\n            [responder.latitude, responder.longitude],\n            [res.data.latitude, res.data.longitude]\n          );\n          setDistance(dist.toFixed(2));\n        } else {\n          console.warn(\"Invalid data from backend:\", res.data);\n        }\n      } catch (error) {\n        console.error('Error fetching location:', error);\n      }\n    };\n\n    fetchLocation();\n    const interval = setInterval(fetchLocation, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const linePositions =\n    location && responder\n      ? [\n          [responder.latitude, responder.longitude],\n          [location.latitude, location.longitude]\n        ]\n      : [];\n\n  return (\n    <div className=\"bg-white p-4 rounded shadow\">\n      <h2 className=\"text-xl font-semibold mb-4\">Live GPS Tracker</h2>\n      {location ? (\n        <>\n          <p>\n            üìç User Location: {location.latitude}, {location.longitude}\n          </p>\n          <p>\n            üöì Responder Location: {responder.latitude}, {responder.longitude}\n          </p>\n          <p>\n            üìè Distance: <strong>{distance} km</strong>\n          </p>\n\n          <MapContainer\n            center={[location.latitude, location.longitude]}\n            zoom={16}\n            style={{ height: '400px', width: '00%', marginTop: '1rem' }}\n          >\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution=\"&copy; OpenStreetMap contributors\"\n            />\n            <Marker position={[responder.latitude, responder.longitude]}>\n              <Popup>Responder</Popup>\n            </Marker>\n            <Marker position={[location.latitude, location.longitude]}>\n              <Popup>User</Popup>\n            </Marker>\n\n            {/* Dashed red line between responder and user */}\n            <Polyline positions={linePositions} pathOptions={{ color: 'red', dashArray: '10' }} />\n          </MapContainer>\n        </>\n      ) : (\n        <p>‚è≥ Waiting for valid GPS data...</p>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}