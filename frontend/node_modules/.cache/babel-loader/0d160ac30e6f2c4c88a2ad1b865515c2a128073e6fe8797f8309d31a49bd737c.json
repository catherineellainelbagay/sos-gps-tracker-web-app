{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Corazon L. Bagay\\\\Downloads\\\\sos\\\\sos-gps-tracker-web-app\\\\frontend\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix marker icon issue\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\n\n// Responder location (PUP Biñan, adjust as needed)\nconst responderLat = 14.3110;\nconst responderLng = 121.0794;\nfunction calculateDistance(lat1, lon1, lat2, lon2) {\n  const toRad = value => value * Math.PI / 180;\n  const R = 6371;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\nfunction Dashboard() {\n  _s();\n  const [location, setLocation] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [pathHistory, setPathHistory] = useState([]);\n  const [historicalPoints, setHistoricalPoints] = useState([]);\n\n  // Fetch current location every 5 seconds\n  useEffect(() => {\n    const fetchLocation = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/location/latest');\n        if (res.data && typeof res.data.latitude === 'number') {\n          const newLoc = {\n            latitude: res.data.latitude,\n            longitude: res.data.longitude\n          };\n          setLocation(newLoc);\n          setPathHistory(prev => [...prev, [newLoc.latitude, newLoc.longitude]]);\n          const dist = calculateDistance(responderLat, responderLng, newLoc.latitude, newLoc.longitude);\n          setDistance(dist);\n        }\n      } catch (err) {\n        console.error('Error fetching current location:', err);\n      }\n    };\n    fetchLocation();\n    const interval = setInterval(fetchLocation, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Fetch historical SOS points\n  useEffect(() => {\n    const fetchHistory = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/location/history');\n        if (Array.isArray(res.data)) {\n          setHistoricalPoints(res.data); // Expected format: [{latitude, longitude, timestamp}]\n        }\n      } catch (err) {\n        console.error('Error fetching history:', err);\n      }\n    };\n    fetchHistory();\n  }, []);\n  const isNear = distance !== null && distance < 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"\\uD83D\\uDCE1 Live GPS Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPathHistory([]),\n        className: \"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\",\n        children: \"\\uD83D\\uDD04 Reset Path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n        children: \"\\uD83D\\uDD03 Reload All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), location ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCCD Latitude: \", location.latitude, \", Longitude: \", location.longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCCF Distance from Responder: \", distance === null || distance === void 0 ? void 0 : distance.toFixed(2), \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [location.latitude, location.longitude],\n        zoom: 17,\n        style: {\n          height: '700px',\n          width: '100%',\n          marginTop: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [responderLat, responderLng],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Responder Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [location.latitude, location.longitude],\n          icon: new L.Icon({\n            iconUrl: isNear ? 'https://maps.google.com/mapfiles/ms/icons/green-dot.png' : 'https://maps.google.com/mapfiles/ms/icons/red-dot.png',\n            iconSize: [32, 32]\n          }),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"\\uD83D\\uDCCD User Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), pathHistory.length > 1 && /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: pathHistory,\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), historicalPoints.map((pt, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [pt.latitude, pt.longitude],\n          icon: new L.Icon({\n            iconUrl: 'https://maps.google.com/mapfiles/ms/icons/orange-dot.png',\n            iconSize: [24, 24]\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u23F3 Waiting for GPS data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"49mwnxT9z6KOwEFsIzvESaN0xw4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","MapContainer","TileLayer","Marker","Popup","Polyline","L","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","responderLat","responderLng","calculateDistance","lat1","lon1","lat2","lon2","toRad","value","Math","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","Dashboard","_s","location","setLocation","distance","setDistance","pathHistory","setPathHistory","historicalPoints","setHistoricalPoints","fetchLocation","res","get","data","latitude","newLoc","longitude","prev","dist","err","console","error","interval","setInterval","clearInterval","fetchHistory","Array","isArray","isNear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","reload","toFixed","center","zoom","style","height","width","marginTop","url","attribution","position","icon","iconSize","length","positions","color","map","pt","index","_c","$RefreshReg$"],"sources":["C:/Users/Corazon L. Bagay/Downloads/sos/sos-gps-tracker-web-app/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Popup,\n  Polyline,\n} from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix marker icon issue\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl:\n    'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\n// Responder location (PUP Biñan, adjust as needed)\nconst responderLat = 14.3110;\nconst responderLng = 121.0794;\n\nfunction calculateDistance(lat1, lon1, lat2, lon2) {\n  const toRad = (value) => (value * Math.PI) / 180;\n  const R = 6371;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a =\n    Math.sin(dLat / 2) ** 2 +\n    Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\n\nfunction Dashboard() {\n  const [location, setLocation] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const [pathHistory, setPathHistory] = useState([]);\n  const [historicalPoints, setHistoricalPoints] = useState([]);\n\n  // Fetch current location every 5 seconds\n  useEffect(() => {\n    const fetchLocation = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/location/latest');\n        if (res.data && typeof res.data.latitude === 'number') {\n          const newLoc = {\n            latitude: res.data.latitude,\n            longitude: res.data.longitude,\n          };\n          setLocation(newLoc);\n          setPathHistory((prev) => [...prev, [newLoc.latitude, newLoc.longitude]]);\n          const dist = calculateDistance(\n            responderLat,\n            responderLng,\n            newLoc.latitude,\n            newLoc.longitude\n          );\n          setDistance(dist);\n        }\n      } catch (err) {\n        console.error('Error fetching current location:', err);\n      }\n    };\n\n    fetchLocation();\n    const interval = setInterval(fetchLocation, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Fetch historical SOS points\n  useEffect(() => {\n    const fetchHistory = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/location/history');\n        if (Array.isArray(res.data)) {\n          setHistoricalPoints(res.data); // Expected format: [{latitude, longitude, timestamp}]\n        }\n      } catch (err) {\n        console.error('Error fetching history:', err);\n      }\n    };\n\n    fetchHistory();\n  }, []);\n\n  const isNear = distance !== null && distance < 1;\n\n  return (\n    <div className=\"bg-white p-4 rounded shadow\">\n      <h2 className=\"text-xl font-semibold mb-4\">📡 Live GPS Tracker</h2>\n\n      <div className=\"flex gap-4 mb-4\">\n        <button\n          onClick={() => setPathHistory([])}\n          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\n        >\n          🔄 Reset Path\n        </button>\n        <button\n          onClick={() => window.location.reload()}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n        >\n          🔃 Reload All\n        </button>\n      </div>\n\n      {location ? (\n        <>\n          <p>📍 Latitude: {location.latitude}, Longitude: {location.longitude}</p>\n          <p>📏 Distance from Responder: {distance?.toFixed(2)} km</p>\n\n          <MapContainer\n            center={[location.latitude, location.longitude]}\n            zoom={17}\n            style={{ height: '700px', width: '100%', marginTop: '1rem' }}\n          >\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution=\"&copy; OpenStreetMap contributors\"\n            />\n\n            {/* Responder marker */}\n            <Marker position={[responderLat, responderLng]}>\n              <Popup>Responder Location</Popup>\n            </Marker>\n\n            {/* Live User marker */}\n            <Marker\n              position={[location.latitude, location.longitude]}\n              icon={new L.Icon({\n                iconUrl: isNear\n                  ? 'https://maps.google.com/mapfiles/ms/icons/green-dot.png'\n                  : 'https://maps.google.com/mapfiles/ms/icons/red-dot.png',\n                iconSize: [32, 32],\n              })}\n            >\n              <Popup>📍 User Now</Popup>\n            </Marker>\n\n            {/* Draw live movement path */}\n            {pathHistory.length > 1 && (\n              <Polyline positions={pathHistory} color=\"blue\" />\n            )}\n\n            {/* Historical SOS markers */}\n            {historicalPoints.map((pt, index) => (\n              <Marker\n                key={index}\n                position={[pt.latitude, pt.longitude]}\n                icon={new L.Icon({\n                  iconUrl: 'https://maps.google.com/mapfiles/ms/icons/orange-dot.png',\n                  iconSize: [24, 24],\n                })}\n              >\n                \n              </Marker>\n            ))}\n          </MapContainer>\n        </>\n      ) : (\n        <p>⏳ Waiting for GPS data...</p>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,YAAY,EACZC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,OAAOJ,CAAC,CAACK,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CR,CAAC,CAACK,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EACX,gFAAgF;EAClFC,OAAO,EACL,6EAA6E;EAC/EC,SAAS,EACP;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMC,YAAY,GAAG,OAAO;AAC5B,MAAMC,YAAY,GAAG,QAAQ;AAE7B,SAASC,iBAAiBA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;EACjD,MAAMC,KAAK,GAAIC,KAAK,IAAMA,KAAK,GAAGC,IAAI,CAACC,EAAE,GAAI,GAAG;EAChD,MAAMC,CAAC,GAAG,IAAI;EACd,MAAMC,IAAI,GAAGL,KAAK,CAACF,IAAI,GAAGF,IAAI,CAAC;EAC/B,MAAMU,IAAI,GAAGN,KAAK,CAACD,IAAI,GAAGF,IAAI,CAAC;EAC/B,MAAMU,CAAC,GACLL,IAAI,CAACM,GAAG,CAACH,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,GACvBH,IAAI,CAACO,GAAG,CAACT,KAAK,CAACJ,IAAI,CAAC,CAAC,GAAGM,IAAI,CAACO,GAAG,CAACT,KAAK,CAACF,IAAI,CAAC,CAAC,GAAGI,IAAI,CAACM,GAAG,CAACF,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;EACzE,MAAMI,CAAC,GAAG,CAAC,GAAGR,IAAI,CAACS,KAAK,CAACT,IAAI,CAACU,IAAI,CAACL,CAAC,CAAC,EAAEL,IAAI,CAACU,IAAI,CAAC,CAAC,GAAGL,CAAC,CAAC,CAAC;EACxD,OAAOH,CAAC,GAAGM,CAAC;AACd;AAEA,SAASG,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC4C,QAAQ,EAAEC,WAAW,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC8C,WAAW,EAAEC,cAAc,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACAD,SAAS,CAAC,MAAM;IACd,MAAMmD,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMlD,KAAK,CAACmD,GAAG,CAAC,2CAA2C,CAAC;QACxE,IAAID,GAAG,CAACE,IAAI,IAAI,OAAOF,GAAG,CAACE,IAAI,CAACC,QAAQ,KAAK,QAAQ,EAAE;UACrD,MAAMC,MAAM,GAAG;YACbD,QAAQ,EAAEH,GAAG,CAACE,IAAI,CAACC,QAAQ;YAC3BE,SAAS,EAAEL,GAAG,CAACE,IAAI,CAACG;UACtB,CAAC;UACDb,WAAW,CAACY,MAAM,CAAC;UACnBR,cAAc,CAAEU,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,CAACF,MAAM,CAACD,QAAQ,EAAEC,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC;UACxE,MAAME,IAAI,GAAGpC,iBAAiB,CAC5BF,YAAY,EACZC,YAAY,EACZkC,MAAM,CAACD,QAAQ,EACfC,MAAM,CAACC,SACT,CAAC;UACDX,WAAW,CAACa,IAAI,CAAC;QACnB;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,GAAG,CAAC;MACxD;IACF,CAAC;IAEDT,aAAa,CAAC,CAAC;IACf,MAAMY,QAAQ,GAAGC,WAAW,CAACb,aAAa,EAAE,IAAI,CAAC;IACjD,OAAO,MAAMc,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA/D,SAAS,CAAC,MAAM;IACd,MAAMkE,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMd,GAAG,GAAG,MAAMlD,KAAK,CAACmD,GAAG,CAAC,4CAA4C,CAAC;QACzE,IAAIc,KAAK,CAACC,OAAO,CAAChB,GAAG,CAACE,IAAI,CAAC,EAAE;UAC3BJ,mBAAmB,CAACE,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;QACjC;MACF,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC/C;IACF,CAAC;IAEDM,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,MAAM,GAAGxB,QAAQ,KAAK,IAAI,IAAIA,QAAQ,GAAG,CAAC;EAEhD,oBACEnC,OAAA;IAAK4D,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1C7D,OAAA;MAAI4D,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnEjE,OAAA;MAAK4D,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B7D,OAAA;QACEkE,OAAO,EAAEA,CAAA,KAAM5B,cAAc,CAAC,EAAE,CAAE;QAClCsB,SAAS,EAAC,0DAA0D;QAAAC,QAAA,EACrE;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjE,OAAA;QACEkE,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAAClC,QAAQ,CAACmC,MAAM,CAAC,CAAE;QACxCR,SAAS,EAAC,4DAA4D;QAAAC,QAAA,EACvE;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELhC,QAAQ,gBACPjC,OAAA,CAAAE,SAAA;MAAA2D,QAAA,gBACE7D,OAAA;QAAA6D,QAAA,GAAG,yBAAa,EAAC5B,QAAQ,CAACY,QAAQ,EAAC,eAAa,EAACZ,QAAQ,CAACc,SAAS;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxEjE,OAAA;QAAA6D,QAAA,GAAG,wCAA4B,EAAC1B,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEkC,OAAO,CAAC,CAAC,CAAC,EAAC,KAAG;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAE5DjE,OAAA,CAACP,YAAY;QACX6E,MAAM,EAAE,CAACrC,QAAQ,CAACY,QAAQ,EAAEZ,QAAQ,CAACc,SAAS,CAAE;QAChDwB,IAAI,EAAE,EAAG;QACTC,KAAK,EAAE;UAAEC,MAAM,EAAE,OAAO;UAAEC,KAAK,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAd,QAAA,gBAE7D7D,OAAA,CAACN,SAAS;UACRkF,GAAG,EAAC,oDAAoD;UACxDC,WAAW,EAAC;QAAmC;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eAGFjE,OAAA,CAACL,MAAM;UAACmF,QAAQ,EAAE,CAACnE,YAAY,EAAEC,YAAY,CAAE;UAAAiD,QAAA,eAC7C7D,OAAA,CAACJ,KAAK;YAAAiE,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eAGTjE,OAAA,CAACL,MAAM;UACLmF,QAAQ,EAAE,CAAC7C,QAAQ,CAACY,QAAQ,EAAEZ,QAAQ,CAACc,SAAS,CAAE;UAClDgC,IAAI,EAAE,IAAIjF,CAAC,CAACK,IAAI,CAAC;YACfM,OAAO,EAAEkD,MAAM,GACX,yDAAyD,GACzD,uDAAuD;YAC3DqB,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;UACnB,CAAC,CAAE;UAAAnB,QAAA,eAEH7D,OAAA,CAACJ,KAAK;YAAAiE,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,EAGR5B,WAAW,CAAC4C,MAAM,GAAG,CAAC,iBACrBjF,OAAA,CAACH,QAAQ;UAACqF,SAAS,EAAE7C,WAAY;UAAC8C,KAAK,EAAC;QAAM;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACjD,EAGA1B,gBAAgB,CAAC6C,GAAG,CAAC,CAACC,EAAE,EAAEC,KAAK,kBAC9BtF,OAAA,CAACL,MAAM;UAELmF,QAAQ,EAAE,CAACO,EAAE,CAACxC,QAAQ,EAAEwC,EAAE,CAACtC,SAAS,CAAE;UACtCgC,IAAI,EAAE,IAAIjF,CAAC,CAACK,IAAI,CAAC;YACfM,OAAO,EAAE,0DAA0D;YACnEuE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;UACnB,CAAC;QAAE,GALEM,KAAK;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQJ,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC;IAAA,eACf,CAAC,gBAEHjE,OAAA;MAAA6D,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjC,EAAA,CAnIQD,SAAS;AAAAwD,EAAA,GAATxD,SAAS;AAqIlB,eAAeA,SAAS;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}